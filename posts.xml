<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
	<channel>
		<title><![CDATA[Rooc]]></title>
		<description><![CDATA[Блог веб-разработчика, CSS3, HTML, HTML5, jQuery]]></description>
		<link>http://rooc.me</link>
		<lastBuildDate>
			
			Sun Aug 10 2014 15:06:51 GMT+0300 (EEST)
		</lastBuildDate>
		<atom:link href="http://rooc.me//rss/posts.xml" rel="self" type="application/rss+xml"/>
		<author><![CDATA[rooc]]></author>

		
		
		

		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
			

		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
		
		
			<item>
				<title>Основы работы с SVG</title>
				<link>http://rooc.me/blog/using-svg.html</link>
				<description>
					&lt;p&gt;SVG это формат векторной графики, буквально означающий &lt;strong&gt;Масштабируемая Векторная Графика&lt;/strong&gt;. Собственно это то с чем вы работаете в Иллюстраторе. SVG использовать в вебе довольно просто но тем не менее есть куча того что необходимо знать.&lt;!-- more --&gt;&lt;/p&gt;
&lt;h3&gt;Зачем это вообще все?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Маленький размер который к тому же хорошо сжимается&lt;/li&gt;
&lt;li&gt;Масштабирование без потери четкости (за исключением очень маленьких размеров)&lt;/li&gt;
&lt;li&gt;Отлично выглядит на ретине&lt;/li&gt;
&lt;li&gt;Легко управляем, фильтры, интерактивность&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Где взять SVG графику&lt;/h3&gt;
&lt;p&gt;Нарисуйте что-нибудь в Иллюстраторе, вот к примеру типа такого:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cdn.css-tricks.com/wp-content/uploads/2013/03/kiwi.png&quot; alt=&quot;Kiwi&quot; title=&quot;figure&quot;&gt;&lt;/p&gt;
&lt;p&gt;Обратите внимание что картинка обрезана четко по краю изображения. Полотно, или основа, имеет значение в svg точно также как в png или jpg.&lt;/p&gt;
&lt;p&gt;Графику в Иллюстраторе можно сохранять как svg файл.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cdn.css-tricks.com/wp-content/uploads/2013/03/save-as-svg.png&quot; alt=&quot;save as&quot; title=&quot;figure&quot;&gt;&lt;/p&gt;
&lt;p&gt;При сохранении есть кучка настроек но я честно говоря особо в них не разбираюсь. На эту тему есть целая &lt;a href=&quot;http://www.w3.org/TR/SVGMobile/&quot;&gt;спецификация&lt;/a&gt;. Сохранение как версия 1.1 работает нормально как по мне.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cdn.css-tricks.com/wp-content/uploads/2013/03/svg-options.png&quot; alt=&quot;options&quot; title=&quot;figure&quot;&gt;&lt;/p&gt;
&lt;p&gt;Интересный момент здесь в том что можно либо сохранить файл либо выбрать &lt;code&gt;SVG Code...&lt;/code&gt; и при этом откроется текстовый редактор с кодом svg.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cdn.css-tricks.com/wp-content/uploads/2013/03/svg-code.png&quot; alt=&quot;code&quot; title=&quot;figure&quot;&gt;&lt;/p&gt;
&lt;p&gt;Оба варианта полезны.&lt;/p&gt;
&lt;h2&gt;Использование svg как &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;После сохранения svg файла, его можно напрямую использовать в html.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;img src=&amp;quot;kiwi.svg&amp;quot; alt=&amp;quot;Kiwi standing on oval&amp;quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;В иллюстраторе полотно было размером 612 на 502 пиксела.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cdn.css-tricks.com/wp-content/uploads/2013/03/artboard.png&quot; alt=&quot;illustrator&quot; title=&quot;figure&quot;&gt;&lt;/p&gt;
&lt;p&gt;Именно такого размера картинка будет на странице если ей никак не задавать размеры. Можно просто поменять размер точно также как это делается для png или jpeg изменяя &lt;code&gt;width&lt;/code&gt; и &lt;code&gt;height&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;jsbin-embed&quot; href=&quot;http://jsbin.com/caret/1/embed?output&quot;&gt;JS Bin&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Поддержка браузерами&lt;/h3&gt;
&lt;p&gt;Использование svg в элементе img поддерживают &lt;a href=&quot;http://caniuse.com/#feat=svg-img&quot;&gt;такие браузеры&lt;/a&gt;, а точнее - это работает везде кроме Эксплорер 8 и ниже и Андроид 2.3 и ниже.&lt;/p&gt;
&lt;p&gt;Если вы хотите использовать svg но также нужно как то поддерживать эти браузеры то есть несколько вариантов. О нескольких разных вариантах я рассказывал на &lt;a href=&quot;http://css-tricks.com/workshop-notes-webstock-13/&quot;&gt;разных&lt;/a&gt; &lt;a href=&quot;http://css-tricks.com/workshop-notes-from-incontrol-hawaii/&quot;&gt;семинарах&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Один из вариантов это проверить поддержку SVG при помощи Modernizr и поменять атрибут &lt;code&gt;src&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;if (!Modernizr.svg) {
  $(&amp;quot;.logo img&amp;quot;).attr(&amp;quot;src&amp;quot;, &amp;quot;images/logo.png&amp;quot;);
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;David Bushell предложил очень &lt;a href=&quot;http://dbushell.com/2013/02/04/a-primer-to-front-end-svg-hacking/&quot;&gt;простую альтернативу&lt;/a&gt;, если вас не смущает джаваскрипт код в html:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;img src=&amp;quot;image.svg&amp;quot; onerror=&amp;quot;this.onerror=null; this.src=&amp;#39;image.png&amp;#39;&amp;quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Есть еще такой инструмент - &lt;a href=&quot;http://benhowdle.im/svgeezy/&quot;&gt;SVGeezy&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;SVG как фоновая картинка&lt;/h2&gt;
&lt;p&gt;Точно также как обычные картинки можно применять svg как фоновую картинку.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;a href=&amp;quot;/&amp;quot; class=&amp;quot;logo&amp;quot;&amp;gt;
  Kiwi Corp
&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.logo {
    display: block;
    text-indent: -9999px;
    width: 100px;
    height: 82px;
    background: url(kiwi.svg);
    background-size: 100px 82px;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Обратите внимание что размер фоновой картинки установлен в размер самого элемента &lt;code&gt;.logo&lt;/code&gt;. Это необходимо, иначе мы увидим только верхний левый фрагмент намного большей исходной svg картинки. Эти размеры должны учитывать соотношение сторон оригинальной картинки. Но не забывайте что можно просто использовать &lt;code&gt;background-size: contain&lt;/code&gt; если вы не знаете точных размеров родительского элемента.&lt;/p&gt;
&lt;h3&gt;Поддержка браузерами&lt;/h3&gt;
&lt;p&gt;Использование svg для фоновых картинок имеет похожую на SVG для картинок &lt;a href=&quot;http://caniuse.com/#feat=svg-css&quot;&gt;поддержку&lt;/a&gt;. Проблемы только с ИЕ 8 и ниже и андроид 2.3 и ниже.&lt;/p&gt;
&lt;p&gt;Опять же modernizr хорошо помогает здесь и даже более эффективно чем с img. Если мы поменяем значение для &lt;code&gt;background-image&lt;/code&gt; на поддерживаемый формат то буден сделан только один http запрос вместо двух в предыдущем случае. Модернизер добавляет класс в html - &lt;code&gt;no-svg&lt;/code&gt; если браузер не поддерживает формат, и тогда мы можем сделать:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.main-header {
  background: url(logo.svg) no-repeat top left;
  background-size: contain;
}

.no-svg .main-header {
  background-image: url(logo.png);
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Другой умный прием использования svg фоновых картинок заключается в том чтобы использовать их совместно с множественным фоном. SVG и фоновые картинки имеют одинаковую поддержку браузеров так что если браузер понимает множественный бекграунд то он понимает и svg, поэтому:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;body {
  background: url(fallback.png);
  background-image: url(image.svg), none;
}&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Проблема с &lt;img&gt; и с фоновыми картинками&lt;/h3&gt;
&lt;p&gt;В том что вы не получаете контроля над содержимым SVG по сравнению с следующими двумя способами.&lt;/p&gt;
&lt;h2&gt;Инлайновый svg&lt;/h2&gt;
&lt;p&gt;Помните способ получить код svg который мы встречали когда сохраняли svg из иллюстратора? Этот же самый код можно получить просто открыв svg файл текстовым редактором. Так вот можно взять этот код, вставить прямо в html и мы получим ту же самую картинку как если бы вставили элементом img.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;body&amp;gt;

   &amp;lt;!-- paste in SVG code, image shows up!  --&amp;gt;

&amp;lt;/body&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Плюс здесь в том что картинка уже находится прямо в документе и не требует никаких http запросов. Другими словами плюсы в этом такие же как при использовании &lt;a href=&quot;http://css-tricks.com/data-uris/&quot;&gt;Data URI&lt;/a&gt;. И недостатки тоже те же самые. Потенциально раздутый код, здоровая куча хлама прямо в документе который вы редактируете плюс невозможность кеширования.&lt;/p&gt;
&lt;p&gt;Если вы пишете на каком нибудь серверном языке то вы можете добиться чистоты как то так:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&amp;lt;?php include(&amp;quot;kiwi.svg&amp;quot;); ?&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Оптимизация&lt;/h3&gt;
&lt;p&gt;Наверно вас это не сильно удивит но svg который делает иллюстратор не самый идеальный с точки зрения оптимизации. Поджать можно при помощи &lt;a href=&quot;http://petercollingridge.appspot.com/svg_optimiser&quot;&gt;SVG Optimiser&lt;/a&gt;. Загружаете старый выгружаете новый. В этом &lt;a href=&quot;http://www.youtube.com/watch?v=iVzW3XuOm7E&amp;amp;feature=youtu.be&quot;&gt;видео&lt;/a&gt; показываеться что можно даже удалить переносы строк после такой оптимизации.&lt;/p&gt;
&lt;p&gt;Если вы реально круты вот вам &lt;a href=&quot;https://github.com/svg/svgo&quot;&gt;инструмент&lt;/a&gt; для Нода.&lt;/p&gt;
&lt;p&gt;И теперь можно контролировать картинку стилями!&lt;/p&gt;
&lt;p&gt;Нетрудно заметить что svg выглядит очень похоже на html, это потому что по сути xml документы. Наша конкретная картинка состоит из двух тегов, &lt;code&gt;&amp;lt;ellipse&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;. Ничего нам не мешает присвоить элементам классы точно также как мы делаем в html.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;svg ...&amp;gt;
  &amp;lt;ellipse class=&amp;quot;ground&amp;quot; .../&amp;gt;
  &amp;lt;path class=&amp;quot;kiwi&amp;quot; .../&amp;gt;
&amp;lt;/svg&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Теперь мы можем стайлить эти элементы специальным svg css. Эти стили не обязательно должны быть внутри svg, можно даже их выносить в наши обычные стили. Обратите внимание что элементы svg имеют свои специфические css свойства. К примеру вместо &lt;code&gt;background-color&lt;/code&gt; надо использовать &lt;code&gt;fill&lt;/code&gt;. Обычные штуки типа ховера работают.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.kiwi {
  fill: #94d31b; 
}
.kiwi:hover {
  fill: #ace63c; 
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Что совсем круто так это фильтры в svg. Например размытие. Сначала надо вписать фильтр в svg:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;svg ...&amp;gt;
  ...
  &amp;lt;filter id=&amp;quot;pictureFilter&amp;quot; &amp;gt;
    &amp;lt;feGaussianBlur stdDeviation=&amp;quot;5&amp;quot; /&amp;gt;
  &amp;lt;/filter&amp;gt; 
&amp;lt;/svg&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Потом это используется в стилях так:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.ground:hover {
    filter: url(#pictureFilter);
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a class=&quot;jsbin-embed&quot; href=&quot;http://jsbin.com/qeyuju/1/embed?output&quot;&gt;JS Bin&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Поддержка&lt;/h3&gt;
&lt;p&gt;У встроенный svg свой &lt;a href=&quot;http://caniuse.com/#feat=svg-html5&quot;&gt;набор поддерживаемых браузеров&lt;/a&gt;, но, опять же, проблемы с ИЕ8 и андроидом 2.3.&lt;/p&gt;
&lt;p&gt;Один способ реализовать совместимость:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;svg&amp;gt; ... &amp;lt;/svg&amp;gt;
&amp;lt;div class=&amp;quot;fallback&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Дальше при помощи Модернизера:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.fallback { 
  display: none;

}
.no-svg .fallback { 
  background-image: url(logo.png); 
}&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;SVG как &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Если видеть в html кучу хлама вам не по душе можно залинковать svg файл сохраняя возможность работать с деревом элементов:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;object type=&amp;quot;image/svg+xml&amp;quot; data=&amp;quot;kiwi.svg&amp;quot; class=&amp;quot;logo&amp;quot;&amp;gt;
  Kiwi Logo &amp;lt;!-- fallback image in CSS --&amp;gt;
&amp;lt;/object&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Для старья опять Модернизер:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.no-svg .logo {
  width: 200px;
  height: 164px;
  background-image: url(kiwi.png);
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;В данном случае мы получаем кеширование и наилучшую поддержку браузерами чем в любом другом варианте, но для того чтобы работали стили придется включать стили внутрь svg файла. Ни внешние стили ни стили внутри &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; работать не будут.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;&amp;lt;svg ...&amp;gt;
  &amp;lt;style&amp;gt;
    /* SVG specific fancy CSS styling here */
  &amp;lt;/style&amp;gt;
  ...
&amp;lt;/svg&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Внешние стили для &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Есть способ для указания внешних стилей что есть неплохо для кеширования. Это работает только для &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; содержащими svg файл, по крайней мере мои тесты показали так. Нужно в ваш svg файл поместить вот это перед открытием svg тега.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;?xml-stylesheet type=&amp;quot;text/css&amp;quot; href=&amp;quot;svg.css&amp;quot; ?&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Если вы это вставите в ваш html то страница не срендерится, если это будет в svg но svg вставляется как &lt;img&gt; или как фоновая картинка, страница отрисуется, svg тоже срендерится но стили эти работать не будут.&lt;/p&gt;
&lt;h2&gt;Data URI&lt;/h2&gt;
&lt;p&gt;Еще один способ сжать максимально это сконвертировать svg в data uri. Можно это сделать &lt;a href=&quot;http://www.mobilefish.com/services/base64/base64.php&quot;&gt;специальным сервисом&lt;/a&gt;. Кидаете туда содержимое вашего svg файла и получаете вот такой вот мусор. Не забудьте удалить переносы строк.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cdn.css-tricks.com/wp-content/uploads/2013/03/base64-data.png&quot; alt=&quot;svg data uri&quot; title=&quot;figure&quot;&gt;&lt;/p&gt;
&lt;p&gt;Потом это можно вставлять во все варианты о которых мы говорили кроме конечно инлайновый svg, это просто не имеет смысла в данном случае. Этот код должен быть на месте &lt;code&gt;[data]&lt;/code&gt;:&lt;/p&gt;
&lt;h3&gt;Картинка&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;img src=&amp;quot;data:image/svg+xml;base64,[data]&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;CSS&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;logo {
  background: url(data:image/svg+xml;base64,[data]);
}&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Object&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;object type=&amp;quot;image/svg+xml&amp;quot; data=&amp;quot;data:image/svg+xml;base64,[data]&amp;quot;&amp;gt;
  fallback
&amp;lt;/object&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;И - если у вас были вложенные стили &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;  в вашем svg перед тем как вы конвертировали это по прежнему будет работать в случае использования как &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Полезные инструменты&lt;/h2&gt;
&lt;p&gt; &lt;strong&gt;&lt;a href=&quot;https://github.com/filamentgroup/grunticon&quot;&gt;grunticon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Берет папку с svg/png файлами (иконки сделанные в илюстраторе или типа того), и выводит ее в трех форматах: svg data uri, png data uri и таблицу стилей для совместимости с сылками на обычные картинки, которые тоже генерируются автоматически и выкладываются в отдельную папку.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; &lt;strong&gt;&lt;a href=&quot;https://github.com/jkphl/iconizr&quot;&gt;iconizr&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Консольный инструмент (PHP) для конвертирования svg картинок в набор иконок (svg &amp;amp; png, отдельные иконки и / или спрайты) с поддержкой оптимизации и выходного формата в sass.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;По теме&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;David Bushell: &lt;a href=&quot;http://dbushell.com/2013/02/04/a-primer-to-front-end-svg-hacking/&quot;&gt;A Primer to Front-end SVG Hacking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;David Bushell: &lt;a href=&quot;http://coding.smashingmagazine.com/2012/01/16/resolution-independence-with-svg/&quot;&gt;Resolution Independence With SVG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/SVG&quot;&gt;MDN on SVG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Browser support for &lt;a href=&quot;http://caniuse.com/#search=svg&quot;&gt;a variety of different SVG related things&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Peter Gasston: &lt;a href=&quot;http://www.broken-links.com/2012/08/14/better-svg-sprites-with-fragment-identifiers/&quot;&gt;Better SVG Sprites With Fragment Identifiers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;simuari: &lt;a href=&quot;http://simurai.com/post/20251013889/svg-stacks&quot;&gt;SVG Stacks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://svgjs.com/&quot;&gt;SVG.js&lt;/a&gt; - &amp;quot;A lightweight library for manipulating and animating SVG.&amp;quot;&lt;/li&gt;
&lt;li&gt;Emmet has an &lt;a href=&quot;http://docs.emmet.io/actions/base64/&quot;&gt;awesome way&lt;/a&gt; to get a data URI from an SVG right from your code editor.&lt;/li&gt;
&lt;li&gt;Compass &lt;a href=&quot;http://compass-style.org/reference/compass/helpers/inline-data/&quot;&gt;has a helper&lt;/a&gt; for data URIs too.&lt;/li&gt;
&lt;li&gt;Adobe: &lt;a href=&quot;http://blogs.adobe.com/webplatform/2013/01/08/svg-styling/&quot;&gt;Styling SVG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Andrew J. Baker: &lt;a href=&quot;http://buildnewgames.com/taming-the-svg-beast/&quot;&gt;Taming the SVG Beast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Illustrator alternatives: &lt;a href=&quot;http://inkscape.org/&quot;&gt;Inkscape&lt;/a&gt;, &lt;a href=&quot;http://www.bohemiancoding.com/sketch/#4&quot;&gt;Sketch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Krister Kari: &lt;a href=&quot;http://kristerkari.github.com/adventures-in-webkit-land/blog/2013/03/08/dealing-with-svg-images-in-mobile-browsers/&quot;&gt;Dealing with SVG images in mobile browsers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

				</description>
				<dc:creator><![CDATA[rooc]]></dc:creator>
				<pubDate>
					Wed Jun 18 2014 03:00:00 GMT+0300 (EEST)
				</pubDate>
			</item>
			
		
			<item>
				<title>Странный button</title>
				<link>http://rooc.me/blog/buttons.html</link>
				<description>
					&lt;p&gt;Речь пойдет о верстке кнопок. Когда верстаются кнопки обычно делается несколько модификаций, в том числе модификаций размера. Меня сейчас интересуют изменения отступов при изменении размера шрифта кнопки. Так это делается в бутстрапе:&lt;!-- more --&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.btn {
    ...
    padding: 6px 12px;
}

.btn-lg {
    ...
    padding: 10px 16px;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Мне казалось логично было бы сделать оступы либо высоту кнопки  в &lt;code&gt;em&lt;/code&gt; поскольку отступы должны зависеть от размера шрифта.&lt;/p&gt;
&lt;p&gt;Помимо этого нужно чтобы стили не зависели от html элемента к которому они применяются, то есть они должны работать одинаково на &lt;code&gt;a, button, div&lt;/code&gt;. Когда я начал экспериментировать то увидел такую картину:&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;jsbin-embed&quot; href=&quot;http://jsbin.com/guwoc/19/embed?output&quot;&gt;JS Bin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Справа элемент &lt;code&gt;button&lt;/code&gt;, слева &lt;code&gt;a&lt;/code&gt;. Оказывается элемент &lt;code&gt;button&lt;/code&gt; сам выравнивает текст вертикально. Может это не новость но я не знал.&lt;/p&gt;
&lt;p&gt;Еще одна интересная особенность &lt;code&gt;button&lt;/code&gt; - элемент включает в свою высоту бордер и отступы, то есть ведет себя как будто для него работает &lt;code&gt;box-sizing: border-box;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;jsbin-embed&quot; href=&quot;http://jsbin.com/guwoc/18/embed?output&quot;&gt;JS Bin&lt;/a&gt;
Попробуйте расскомментировать строку с &lt;code&gt;box-sizing&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Финальный вариант получился такой:&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;jsbin-embed&quot; href=&quot;http://jsbin.com/guwoc/16/embed?output&quot;&gt;JS Bin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В нем есть свои минусы, например кнопка не допускает двухстрочной подписи. Можно сделать отступы сверху-снизу в &lt;code&gt;em&lt;/code&gt;, просто бывает так что при определенных шрифтах для точного центрирования надо делать разными отсуп снизу и сверху.&lt;/p&gt;

				</description>
				<dc:creator><![CDATA[rooc]]></dc:creator>
				<pubDate>
					Wed Jun 11 2014 03:00:00 GMT+0300 (EEST)
				</pubDate>
			</item>
			
		
			<item>
				<title>OOCSS. Утилиты</title>
				<link>http://rooc.me/blog/oocss-utils.html</link>
				<description>
					&lt;p&gt;Обьектно-ориентированный CSS, он же яндексовый метод БЕМ, он же SMACSS, это находка, благодаря которой в верстку пришел порядок. Ну почти. Особенно это очевидно на больших проектах которые переделываются не один раз. Но об этом уже много говорилось, добавить уже нечего. Я хочу рассказать о некоторых проблемах при работе c этой идеологией.&lt;/p&gt;
&lt;!-- more --&gt;

&lt;p&gt;Мне казалось что в идеале CSS должен содержать только дефолтные стили для всех тегов плюс набор модулей. То есть не должно быть никаких случайных стилей добавленных в конец файла, все должно быть четко структурировано по модулям. Например такого быть не должно:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.tutorials div.tutorialIndexImg {
    text-align: center;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Мало того что непонятно для чего нужная каскадность да еще и тривильное выравнивание по центру.&lt;/p&gt;

				</description>
				<dc:creator><![CDATA[rooc]]></dc:creator>
				<pubDate>
					Tue Feb 18 2014 02:00:00 GMT+0200 (EET)
				</pubDate>
			</item>
			
		
			<item>
				<title>HarpJs</title>
				<link>http://rooc.me/blog/harpjs.html</link>
				<description>
					&lt;p&gt;Статические генераторы стали модной темой, их появилось &lt;a href=&quot;http://staticsitegenerators.net/&quot;&gt;много&lt;/a&gt;. Раз в месяц мне попадается статья типа - &lt;a href=&quot;http://joefleming.net/posts/wordpress-out-docpad-in/&quot;&gt;Как я перешел от вордпресса к статике&lt;/a&gt;.&lt;!-- more --&gt;&lt;/p&gt;
&lt;p&gt;Я начал использовать статические генераторы просто как инструмент для верстки, на этапе превращения дизайнерского макета в статические html, css, js. Эта верстка потом идет дальше к программерам или еще куда. Это удобно потому что у тебя в распоряжении сразу приятные мелочи типа препроцессинг стилей, инклуды. Тот же CoffeeScript например, если вы им пользуетесь. Сначала я пробовал пользоваться для этих целей грантом, но стало не хватать возможностей, типа метаданные для страниц. Хотя это можно каким то боком сделать, скажем, с помощью Jade, но это не так удобно как это бывает в статических генераторах. Возможно я не прав и все это можно сделать при помощи &lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; или &lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Первым генератором которым я пользовался более-менее продолжительно был Docpad. Очень неплохой генератор, супернавороченный, с тонной плагинов и хорошим сообществом. В какой то момент у меня появилась бага, которую я не мог разрешить. Она была очень надоедливая, и решил посмотреть другие генераторы. Ничего плохого в адресс докпада сказать не хочу, он &lt;a href=&quot;http://emmet.io/blog/docpad/&quot;&gt;хороший&lt;/a&gt;.&lt;/p&gt;

				</description>
				<dc:creator><![CDATA[rooc]]></dc:creator>
				<pubDate>
					Tue Jan 21 2014 02:00:00 GMT+0200 (EET)
				</pubDate>
			</item>
			
		
			<item>
				<title>Планировщики</title>
				<link>http://rooc.me/blog/todos.html</link>
				<description>
					&lt;p&gt;&lt;img src=&quot;/assets/img/post/todos.png&quot; alt=&quot;todos&quot; title=&quot;imgleft&quot;&gt;&lt;/p&gt;
&lt;p&gt;Планировщиками я пользуюсь давно, еще до того как начал пользоваться андроидом, если правильно помню самый первый был &lt;a href=&quot;http://www.rememberthemilk.com/&quot;&gt;RTM&lt;/a&gt;. Хотя нет, неправда, RTM не был первый, были когда-то такие блокноты-органайзеры, их дарили все время на дни рождения и прочие праздники. &lt;a href=&quot;http://www.elco-adv.com/files/image/bar_mat/145-sfs-g06-1.jpg&quot;&gt;Типа такого&lt;/a&gt;. Уверен что ни один из них я не заполнил даже на четверть но пользовался точно.
&lt;!-- more --&gt;&lt;/p&gt;
&lt;p&gt;Кстати по ходу дела узнал про &lt;a href=&quot;http://pomodorotechnique.com/&quot;&gt;Pomodoro Technique&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Из всех планировщиков которыми я успел попользоваться мне запомнились - &lt;a href=&quot;http://www.any.do/&quot;&gt;Any.do&lt;/a&gt;, &lt;a href=&quot;http://todoist.com&quot;&gt;Todoist&lt;/a&gt;, &lt;a href=&quot;http://wunderlist.com&quot;&gt;Wunderlist&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Странно что я нигде не встретил возможность задавать для таска не дату окончания как обычно делают, а период окончания, или период когда задача активна. Что то вроде того как можно делать в календаре. Это было бы удобно потому что сейчас, если у вас есть таск который требует несколько дней для выполнения, приходится напоминать о нем заранее. Ну либо у вас есть таск у которого нет четкой даты окончания то было бы удобно просто иметь таск со статусом активный или типа того.&lt;/p&gt;

				</description>
				<dc:creator><![CDATA[rooc]]></dc:creator>
				<pubDate>
					Thu Dec 19 2013 02:00:00 GMT+0200 (EET)
				</pubDate>
			</item>
			
		
	</channel>
</rss>